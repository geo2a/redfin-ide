// solarized light colour scheme
$base03:    #002b36;
$base02:    #073642;
$base01:    #586e75;
$base00:    #657b83;
$base0:     #839496;
$base1:     #93a1a1;
$base2:     #eee8d5;
$base3:     #fdf6e3;
$yellow:    #b58900;
$orange:    #cb4b16;
$red:       #dc322f;
$magenta:   #d33682;
$violet:    #6c71c4;
$blue:      #268bd2;
$cyan:      #2aa198;
$green:     #859900;


body, html {
    width: 100%;
    height: 100%;
    margin: 0;
    font-size: 12pt;
    font-family: monospace;
    box-sizing: border-box;
    background-color: $base3;
}

.pane {
    background-color: $base3;

    border-style: solid;
    border-width: 1px;
    border-radius: 1px;
    border-color: $base01;

    padding: 0px;
    margin: 0px;
}

.box {
    border: 1px solid $base1;
    margin: 5px;
    & h3 { margin: 0; }
    & h4 { margin: 0; }
    & ul {
        margin: 10px;
        padding: 0;
        list-style: none;
    }
    & ol {
        margin: 0;
    }
    & li {
        margin: 0;
        padding: 0;
        padding-left: 10px;
    }
}

.notice {
    position: absolute;
    background: $base2;
    min-width: 250px;
    max-width: 1000px;
    opacity: 0.75;
    z-index: 2;
}


input {
  background-color : $base2;
  border: 1px solid $base1;
}

$grid-gap: 10px;
$header-height: 140px;

.grid-container {
    display: grid;
    grid-template-columns: 1fr 2fr 1fr;
    grid-template-rows: 1fr auto;
    grid-template-areas:
        "header header header"
        "leftpane middlepane rightpane";
    gap: $grid-gap;
}

.toppane {
    grid-area: header;
    height: $header-height;
    position: sticky;
    top: 0;
    z-index: 1;
    & .contents { display: flex; }
    & ul { list-style-type:none; }
    & .saveWidget {
        width: 300px;
        & button { width: 100px; }
    }
    & .verificationWidget {
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        align-content: flex-start;
        & .input {width: 300px }
        & .proof { font-size: 10pt;
                 }
    }
}

.leftpane {
    grid-area: leftpane;
    align-self: start;
    position: sticky;
    top: $header-height + $grid-gap;
    z-index: 1;
    & .listing { max-height: 250px; overflow-y: auto; }
}

.middlepane {
    grid-area: middlepane;
    z-index: 0;
    overflow: scroll;
}

.rightpane {
    grid-area: rightpane;
    align-self: start;
    position: sticky;
    top: $header-height + $grid-gap;
    z-index: 0;

    & .context { 
        max-height: 75vh; overflow-y: auto; overflow-x: hidden; 
        & .context-data { }
    }
    
    & .constraint {
        position: relative;
        list-style: none;
        margin-left: 0;
        padding-left: 1.2em;

        & li:before {
            content: "âˆ§";
            position: absolute;
            left: 0;
        }
    }
}

button {
    background:linear-gradient(to bottom, #ededed 5%, #dfdfdf 100%);
    background-color:#ededed;
    border:1px solid $base00;
    display:inline-block;
    cursor:pointer;
    color: $base00;
    font-family:Arial;
    font-size:15px;
    font-weight:bold;
    padding:6px 24px;
    margin:0 2px 2px 0;
    text-decoration:none;
}

button:hover {
    background:linear-gradient(to top, #ededed 5%, #a5cc52 100%);
    background-color: #a5cc52;
}

.examples {
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-start;
    width: 200px;
    & .activeExample {
        background: none;
        background-color: #a5cc52;
    }
}

.initState {
    display: grid;
    grid-template-columns: fit-content(20%) 20px fit-content(40%);
    grid-template-rows: auto;
    & .initEq { text-align: center; }
    & .initVal input { width: 200px; }
    & button {width: 100%; margin: 5px 0 5px 0; }
}

.symExecWidget {
    width: 200px;
    & p {
        margin: 0; padding: 0;
        display: block;
    }
    & input { width: 4em; }
    & input[type=checkbox] { width: 1em; }
    & label { font-size: 10pt; }
    & button {
        display: block;
        width: 100x;
    }
}

.tooltip {
    position: relative;
    display: inline-block;

    & .tooltiptext {
        visibility: hidden;
        width: 300px;
        background-color: black;
        color: #fff;
        text-align: center;
        border-radius: 6px;
        padding: 5px 0;

        /* Position the tooltip */
        position: absolute;
        z-index: 1;
        top: 100%;
        left: 100%;
        margin-left: -60px;
    }
    &:hover .tooltiptext {
        visibility: visible;
    }
}

/* Close button*/
.close {
    opacity: 0.3;
    margin: 0;
    margin-left: 10px;
    margin-right: 10px;
    &:hover { opacity: 1; }
    &:before,
    &:after {
            position: absolute;
            content: ' ';
            height: 15px;
            width: 2px;
            background-color: #c23616;
    }
    &:before { transform: rotate(45deg); }
    &:after { transform: rotate(-45deg); }
}

/* Trace tree */
$border-width: 1px;
$tree-width: .1em;
$unreachable-grey: #7f8fa6;

.tree ul {
    position: relative;
    padding: 1em 0;
    white-space: nowrap;
    margin: 0 auto;
    text-align: center;
}

// display nodes as rounded squares
.tree .node {
    display: inline-block; // need white-space fix
    vertical-align: top;
    text-align: center;
    list-style-type: none;
    position: relative;
    // controls tree width
    padding: 1em $tree-width 0 $tree-width;

    &:only-child::after,
    &:only-child::before {
        display: none;
    }
    &:only-child {
        padding-top: 0;
    }
    &:first-child::before,
    &:last-child::after {
        border: 0 none;
    }
    &:first-child::before,
    &:last-child::before {
        border-top: $border-width solid #000;
        content: '';
        position: absolute;
        top: 0;
        width: 50%;
        height: 1em;
    }
    &:first-child::before {
        border-left: $border-width solid #000;
        border-radius: 5px 0 0 0;
        right: 0;
    }
    &:last-child::before {
        border-right: $border-width solid #000;
        border-radius: 0 5px 0 0;
        left: 0;
    }
    &:first-child.unreachable::before,
    &:last-child.unreachable::before{
        border-color: $unreachable-grey;
    }
    &:first-child.hidden::before,
    &:last-child.hidden::before{
        display:none;
    }
    &.has-hidden-children .node {
        padding-top: 0;
    }
    &.has-hidden-children .node::before {
        display:none;
    }
    & a {
        border: $border-width solid #000;
        padding: .25em .35em;
        text-decoration: none;
        display: inline-block;
        border-radius: 5px;
        color: #333;
        position: relative;
        top: $border-width;
        &::after {
            content: '';
            position: absolute;
            bottom: -1em;
            left: 50%;
            border-left: $border-width solid #000;
            width: 0;
            height: 1em;
        }
    }
    & .unreachable a::after {
        border-left: $border-width solid $unreachable-grey;
    }
    & .halted a::after {
        display: none;
    }
}

// Highlight nodes on hover
.tree .node a:hover {
    background: #e9453f;
    color: #fff;
    border: $border-width solid #e9453f;
}

.tree .node .unreachable a {
    color: $unreachable-grey;
    border-color: $unreachable-grey;
}

.tree .node .hidden {
    display: none;
}
